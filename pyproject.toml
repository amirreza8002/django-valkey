[tool.poetry]
name = "django-valkey"
version = "0.1.8"
license = "BSD-3-Caluse"
description = "a valkey cache and session backend for django"
authors = ["amirreza <amir.rsf1380@gmail.com>"]
readme = "README.rst"
classifiers = [
    "Programming Language :: Python",
    "Environment :: Web Environment",
    "Development Status :: 4 - Beta" ,
    "Topic :: Utilities",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: Django :: 5.0",
    "Framework :: Django :: 5.1",

]

include = ["AUTHORS.rst"]  

[tool.poetry.urls]
Homepage = "https://github.com/amirreza8002/django-valkey"
Source = "https://github.com/amirreza8002/django-valkey"
Issues = "https://github.com/amirreza8002/django-valkey/issues"
Documentation = "https://django-valkey.readthedocs.io/en/latest/"

[tool.poetry.dependencies]
python = ">= 3.10"
django = ">= 3.2.9"
valkey = "^6.0.2"

libvalkey = { optional = true, version = "^4.0.1" }
lz4 = { optional = true, version = "^4.3.3" }
pyzstd = { optional = true, version = "^0.16.2" }
msgpack = { optional = true, version = "^1.1.0" }
brotli = { optional = true, version = "^1.1.0"}


[tool.poetry.extras]
libvalkey = ["libvalkey"]
lz4 = ["lz4"]
pyzstd = ["pyzstd"]
msgpack = ["msgpack"]
brotli = ["brotli"]


[tool.poetry.group.dev.dependencies]
black = "^24.10.0"
ruff = "^0.8.0"
mypy = "^1.13.0"
django-stubs = "^5.1.1"
pytest = "^8.3.3"
pytest-django = "^4.9.0"
pytest-mock = "^3.14.0"
coverage = "^7.6.8"
django-coverage-plugin = "^3.1.0"
pytest-asyncio = "^0.24.0"
pre-commit = "^4.0.1"
invoke = "^2.2.0"
django-cmd = "^2.2"


[tool.poetry.group.docs.dependencies]
sphinx = "^8.0.2"
sphinx-pdj-theme = "^0.4.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
plugins = ["mypy_django_plugin.main"]
pretty = true
show_error_codes = true
show_error_context = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unreachable = true

[tool.django-stubs]
django_settings_module = "tests.settings.sqlite"
ignore_missing_settings = true

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "tests.settings.sqlite"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "session"

[tool.coverage.run]
plugins = ["django_coverage_plugin"]
parallel = true


[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402", "F401", "F403"]

[tool.django]
settings_module = "tests.settings.sqlite"
